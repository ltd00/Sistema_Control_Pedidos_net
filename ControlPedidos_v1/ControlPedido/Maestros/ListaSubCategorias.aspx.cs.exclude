using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using ML.CAU.UIC;
using MC.ControlPedido.Logica;
using MC.ControlPedido.Model;
using ML.Seguridad.Entidades;
using ML.Seguridad.Logica;
using ML.Comun.Entidades;
using ML.Comun.Logica;
using ML.CAU.Reportes;

public partial class Maestros_ListaSubCategorias : UIPage
{
    #region Inicio
    
    protected override void OnLoad(EventArgs e)
    {
        if (IsPostBack == false)
        {
            this.gvBandeja.RowDataBound += new GridViewRowEventHandler(gvBandeja_RowDataBound);
            this.hidCodigoCategoria.Value = Request.Params["id"];
            CargarCategoria();
            ListarSubCategoria();
        }
    }
    
    #endregion

    #region Metodos

    /// <summary>
    /// Metodo para cargar descripcion de categoria
    /// </summary>
    private void CargarCategoria()
    {
        try
        {
            CategoriaBLL objCategoriaBLL = new CategoriaBLL();
            DataTable dtData;

            dtData = objCategoriaBLL.ListarCategoria();
            for (int i = 0; i < dtData.Rows.Count; i++)
            {
                if (Convert.ToString(dtData.Rows[i]["N_CODCAT"]).CompareTo(this.hidCodigoCategoria.Value) == 0)
                {
                    this.litTitulo.Text = "Categoría: " + Convert.ToString(dtData.Rows[i]["V_NOMCAT"]);
                    break;                    
                }
            }

            dtData.Dispose();
            objCategoriaBLL.Dispose();
            objCategoriaBLL = null;
        }
        catch (Exception)
        {
            
            throw;
        }
    }

    /// <summary>
    /// Metodo que lista las subCategorias
    /// </summary>
    private void ListarSubCategoria()
    {
        try
        {
            SubCategoriaBLL objSubCategoriaBLL = new SubCategoriaBLL();
            Categoria objCategoria = new Categoria();

            objCategoria.CodigoCategoria = int.Parse(this.hidCodigoCategoria.Value);
            DataTable dtData = objSubCategoriaBLL.ListarSubCategoria(objCategoria);

            this.gvBandeja.DataSource = dtData;
            this.gvBandeja.DataBind();

            //Invoca al metodo para paginar la grilla
            Paginar(dtData, this.gvBandeja, this.litNumeroRegistros, this.litPagina);

        }
        catch (Exception ex)
        {

            CScript.MessageBox(0, ex.Message, upBandeja);
        }
    }
    
    /// <summary>
    /// Metodo que carga las subCategorias
    /// </summary>
    private void GuardarSubCategoria()
    {
        try
        {

            SubCategoriaBLL objSubCategoriaBLL = new SubCategoriaBLL();
            SubCategoria objSubCategoria = new SubCategoria();

            if (this.txtCodigo.Text.Length == 0)
            {
                objSubCategoria.TipoOperacion = UIConstante.TipoOperacionBD.Alta;
                objSubCategoria.CodigoSubCategoria = 0;
            }else
            {
                objSubCategoria.TipoOperacion = UIConstante.TipoOperacionBD.Cambio;
                objSubCategoria.CodigoSubCategoria = int.Parse(this.txtCodigo.Text);
            }

            objSubCategoria.NombreSubCategoria = this.txtDescripcion.Text;
            objSubCategoria.CodigoCategoria = int.Parse(this.hidCodigoCategoria.Value);

            objSubCategoriaBLL.ActualizarSubCategoria(objSubCategoria);

            ListarSubCategoria();
            mpeEdicion.Hide();
            upBandeja.Update();
            
        }
        catch (Exception ex)
        {

            CScript.MessageBox(0, ex.Message, upBandeja);
        }
    }

    #endregion

    #region Eventos
    void gvBandeja_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        try
        {
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                DataRowView fila = (DataRowView)e.Row.DataItem;
                LinkButton lnkDetele = (LinkButton)e.Row.FindControl("lnkDetele");
                lnkDetele.Attributes.Add("onclick", "return confirm('¿Está seguro de eliminar?');");
            }
        }
        catch (Exception)
        {

            throw;
        }
    }
    protected void btnGuardar_Click(object sender, EventArgs e)
    {
        GuardarSubCategoria();
    }
    protected void btnCancelar_Click(object sender, EventArgs e)
    {
        mpeEdicion.Hide();
    }
    protected void btnNuevo_Click(object sender, EventArgs e)
    {
        this.txtCodigo.Text = string.Empty;
        this.txtDescripcion.Text = string.Empty;
        mpeEdicion.Show();
    }
    protected void lnkEdit_Click(object sender, EventArgs e)
    {
        LinkButton lnkEdit = (LinkButton)sender;
        this.txtCodigo.Text = lnkEdit.CommandArgument;
        this.txtDescripcion.Text = lnkEdit.CommandName;
        mpeEdicion.Show();
    }
    protected void lnkDetele_Click(object sender, EventArgs e)
    {
        try
        {
            LinkButton lnkDetele = (LinkButton)sender;
            SubCategoria objSubCategoria = new SubCategoria();
            SubCategoriaBLL objSubCategoriaBLL = new SubCategoriaBLL();

            objSubCategoria.TipoOperacion = UIConstante.TipoOperacionBD.Baja;
            objSubCategoria.CodigoSubCategoria = int.Parse(lnkDetele.CommandArgument);
            objSubCategoriaBLL.ActualizarSubCategoria(objSubCategoria);

            ListarSubCategoria();

            objSubCategoria = null;
            objSubCategoriaBLL.Dispose();
            objSubCategoriaBLL = null;

        }
        catch (Exception ex)
        {

            throw ex;
        }
    }
    protected void btnCerrarEdicion_Click(object sender, ImageClickEventArgs e)
    {
        mpeEdicion.Hide();
    }
    #endregion    

    #region Eventos Paginado

    void Inicializar()
    {
        try
        {

            this.imgbtnBack.Visible = false;
            this.imgbtnStart.Visible = false;
            this.imgbtnEnd.Visible = false;
            this.imgbtnNext.Visible = false;

            this.imgbtnBack.Enabled = false;
            this.imgbtnStart.Enabled = false;
            this.imgbtnEnd.Enabled = false;
            this.imgbtnNext.Enabled = false;

        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    void imgbtnEnd_Click(object sender, ImageClickEventArgs e)
    {
        try
        {
            if (this.gvBandeja.PageIndex < (this.gvBandeja.PageCount - 1))
            {
                this.gvBandeja.PageIndex = this.gvBandeja.PageCount - 1;
                ListarSubCategoria();

                this.imgbtnStart.Enabled = true;
                this.imgbtnBack.Enabled = true;
                this.imgbtnEnd.Enabled = false;
                this.imgbtnNext.Enabled = false;
            }

        }
        catch (Exception ex)
        {
            CScript.MessageBox(0, ex.Message);
        }
    }

    void imgbtnBack_Click(object sender, ImageClickEventArgs e)
    {
        try
        {
            if (this.gvBandeja.PageIndex > 0)
            {
                this.gvBandeja.PageIndex = (this.gvBandeja.PageIndex - 1);
                ListarSubCategoria();

                if (this.gvBandeja.PageIndex > 0)
                {
                    this.imgbtnStart.Enabled = true;
                    this.imgbtnBack.Enabled = true;
                }
                else
                {
                    this.imgbtnStart.Enabled = false;
                    this.imgbtnBack.Enabled = false;
                }

                this.imgbtnEnd.Enabled = true;
                this.imgbtnNext.Enabled = true;
            }

        }
        catch (Exception ex)
        {
            CScript.MessageBox(0, ex.Message);
        }
    }

    void imgbtnNext_Click(object sender, ImageClickEventArgs e)
    {
        try
        {
            if (this.gvBandeja.PageIndex < (this.gvBandeja.PageCount - 1))
            {
                this.gvBandeja.PageIndex = this.gvBandeja.PageIndex + 1;

                ListarSubCategoria();

                this.imgbtnStart.Enabled = true;
                this.imgbtnBack.Enabled = true;

                if (this.gvBandeja.PageIndex == (this.gvBandeja.PageCount - 1))
                {
                    this.imgbtnEnd.Enabled = false;
                    this.imgbtnNext.Enabled = false;
                }
                else
                {
                    this.imgbtnEnd.Enabled = true;
                    this.imgbtnNext.Enabled = true;
                }

            }
        }
        catch (Exception ex)
        {
            CScript.MessageBox(0, ex.Message);
        }
    }

    void imgbtnStart_Click(object sender, ImageClickEventArgs e)
    {
        try
        {
            if (this.gvBandeja.PageIndex > 0)
            {
                this.gvBandeja.PageIndex = 0;
                ListarSubCategoria();

                this.imgbtnStart.Enabled = false;
                this.imgbtnBack.Enabled = false;
                this.imgbtnNext.Enabled = true;
                this.imgbtnEnd.Enabled = true;
            }
        }
        catch (Exception ex)
        {
            CScript.MessageBox(0, ex.Message);
        }
    }

    #endregion

    #region paginacion
    /// <summary>
    /// Metodo que permite paginar un GridView
    /// </summary>
    /// <param name="dtData"></param>
    /// <param name="gvLista"></param>
    /// <param name="litRowCount"></param>
    /// <param name="litPage"></param>
    /// <returns></returns>
    /// <Empresa>Minera Laytaruma S.A.</Empresa>
    /// <Creado por>Edgar Huarcaya C.</Creado>
    /// <Fecha Crea>01 mar 2012</Fecha>
    void Paginar(System.Data.DataTable dtData, System.Web.UI.WebControls.GridView gvLista, System.Web.UI.WebControls.Literal litRowCount, System.Web.UI.WebControls.Literal litPage)
    {
        try
        {

            Int16 pageSize = Int16.Parse(System.Web.Configuration.WebConfigurationManager.AppSettings["numeroRegistrosPorPagina"]);
            if (dtData != null)
            {
                if (dtData.Rows.Count >= pageSize)
                {
                    //PaginacionVisible(true);
                    this.imgbtnEnd.Enabled = true;
                    this.imgbtnNext.Enabled = true;
                }
                else
                {
                    //Inicializar();
                    //PaginacionVisible(false);
                    PaginacionEnabled(false);
                    litRowCount.Text = string.Format("Número de Registros encontrados : {0}", 0);
                    litPage.Text = "Página: 0 de 0";
                }

                Int16 intPag;
                try
                {
                    intPag = short.Parse(Math.Ceiling(Convert.ToDouble(dtData.Rows.Count) / pageSize).ToString());
                    if (intPag == 0) intPag = 1;
                }
                catch (Exception e)
                {
                    intPag = 0;
                }

                litRowCount.Text = string.Format("Número de Registros encontrados : {0}", dtData.Rows.Count);
                litPage.Text = "Página: " + Convert.ToString(this.gvBandeja.PageIndex + 1) + " de " + intPag.ToString();
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    /// <summary>
    /// Metodo para paginacion en la grilla
    /// </summary>
    /// <param name="valor"></param>
    void PaginacionVisible(bool valor)
    {
        try
        {
            imgbtnStart.Visible = valor;
            imgbtnNext.Visible = valor;
            imgbtnBack.Visible = valor;
            imgbtnEnd.Visible = valor;
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    /// <summary>
    /// Metodo para paginacion en la grilla
    /// </summary>
    /// <param name="valor"></param>
    void PaginacionEnabled(bool valor)
    {
        try
        {
            imgbtnStart.Enabled = valor;
            imgbtnNext.Enabled = valor;
            imgbtnBack.Enabled = valor;
            imgbtnEnd.Enabled = valor;
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    #endregion
}