using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using MC.ControlPedido.Logica;
using MC.ControlPedido.Model;
using System.Data;

public partial class FormPedidoAproba : UIPage
{
    #region Inicio
    protected override void OnLoad(EventArgs e)
    {
        //Cargamos eventos en los botones de paginación
        imgbtnStart.Click += new ImageClickEventHandler(imgbtnStart_Click);
        imgbtnNext.Click += new ImageClickEventHandler(imgbtnNext_Click);
        imgbtnBack.Click += new ImageClickEventHandler(imgbtnBack_Click);
        imgbtnEnd.Click += new ImageClickEventHandler(imgbtnEnd_Click);

        if (IsPostBack == false)
        {
            string p = Request.Params["p"];
            this.hidFlujoProceso.Value = p;

            this.txtFecha.Text = DateTime.Now.ToShortDateString();
            ListarArea();
            ListarJefeArea();

            PaginacionEnabled(false);
            ListarDetallePedido();
        }
    }

    #endregion

    #region Metodos
    private void ListarJefeArea()
    {
        try
        {
            in23responsable oin23responsable = new in23responsable();
            oin23responsable.in23codemp = _auditoria.CodigoEmpresa;
            oin23responsable.in23SistemaUsuario = _auditoria.usuario.Nombre;

            Bind(this.ddlJefeArea, oResponsableBLL.ListarResponsable(oin23responsable), "in23Codigo", "In23Descri");
            this.ddlJefeArea.Items.Insert(0, new ListItem("--Seleccione--", "0"));
        }
        catch (Exception ex)
        {

            throw;
        }
    }

    private void ListarArea()
    {
        try
        {
            Bind(this.ddlArea, oAreaBLL.ListarArea(_auditoria.CodigoEmpresa, _auditoria.usuario.Nombre), "In20CodArea", "In20Descripcion");
            this.ddlArea.Items.Insert(0, new ListItem("--Seleccione--", "0"));

        }
        catch (Exception ex)
        {

            throw;
        }
    }

    /// <summary>
    /// Lista de detalle de pedidos
    /// </summary>
    private void ListarDetallePedido()
    {
        try
        {

            In60detalleSeg oIn60detalleSeg = new In60detalleSeg();
            oIn60detalleSeg.In60codemp = _auditoria.CodigoEmpresa;
            oIn60detalleSeg.In60aa = _auditoria.Periodo;
            oIn60detalleSeg.In60numped = this.txtNroPedido.Text;
            oIn60detalleSeg.In60Area = this.ddlArea.SelectedValue;
            oIn60detalleSeg.In60desart = this.txtArticulo.Text;
            oIn60detalleSeg.in60FlujoProceso =int.Parse(this.hidFlujoProceso.Value); //UIConstante.OrdenEstado.JefeOperacion;

            In60pedido oIn60pedido = new In60pedido();
            oIn60pedido.In60TipoPedido = (this.rbPlanificado.Checked == true) ? "P" : "E";
            oIn60pedido.In60codres = this.ddlJefeArea.SelectedValue;

            if (this.txtFecha.Text.Length > 0)
            {
                oIn60pedido.In60fecha = DateTime.Parse(this.txtFecha.Text);
            }
            else
            {
                oIn60pedido.In60fecha = null;
            }

            DataTable dtData;
            dtData = new PedidoBLL().ListarDetallePedidoSeguimiento(oIn60detalleSeg, oIn60pedido);

            this.gvBandeja.DataSource = dtData;
            this.gvBandeja.DataBind();

            //Invoca al metodo para paginar la grilla
            Paginar(dtData, this.gvBandeja, this.litNumeroRegistros, this.litPagina);

            Session.Add("Detalle", dtData);
        }
        catch (Exception ex)
        {

            throw;
        }
    }

    private void ListarAlmacen()
    {
        try
        {

            this.ddlEstadoAprobacion.Items.Add(new ListItem("Almacen 01", "01"));
        }
        catch (Exception)
        {

            throw;
        }
    }

    private void AgregarItem()
    {
        try
        {




        }
        catch (Exception)
        {

            throw;
        }
    }

    /// <summary>
    /// Metodo para cargar estados de pedidos
    /// </summary>
    private void CargarEstado()
    {
        try
        {
            this.ddlEstadoAprobacion.Items.Clear();
            this.ddlEstadoAprobacion.Items.Add(new ListItem("Conforme", UIConstante.EstadoPedidoSeguimiento.Conforme.ToString()));
            this.ddlEstadoAprobacion.Items.Add(new ListItem("Rechazado", UIConstante.EstadoPedidoSeguimiento.Rechazado.ToString()));
            this.ddlEstadoAprobacion.Items.Add(new ListItem("Nuevo valor", UIConstante.EstadoPedidoSeguimiento.NuevoValor.ToString()));

        }
        catch (Exception)
        {

            throw;
        }
    }

    #endregion

    #region Eventos

    #endregion

    protected void btnCancelarAtencion_Click(object sender, EventArgs e)
    {
        mpeArticulo.Hide();
    }

    protected void lnkSeleccione_Click(object sender, EventArgs e)
    {
        try
        {

            In60detalle oIn60detalle = new In60detalle();
            oIn60detalle.In60codemp = _auditoria.CodigoEmpresa;
            oIn60detalle.In60aa = _auditoria.Periodo;
            oIn60detalle.In60cencos = this.ddlArea.SelectedValue;
            oIn60detalle.In60numped = this.txtNroPedido.Text;
            oIn60detalle.In60codalm = this.ddlEstadoAprobacion.SelectedValue;

            LinkButton lnkSeleccione = (LinkButton)sender;
            oIn60detalle.In60codart = lnkSeleccione.CommandArgument;
            oIn60detalle.In60Item = 0;
            oIn60detalle.In60Id = 0;
            oIn60detalle.In60desart = lnkSeleccione.CommandName;
            oIn60detalle.In60unidad = "UND";
            oIn60detalle.In60cantidad = 0;
            oIn60detalle.In60Estado = "P";
            oIn60detalle.In60Area = this.ddlArea.SelectedValue;
            oIn60detalle.In60NameUser = _auditoria.usuario.Nombre;
            oIn60detalle.In60NroParte = string.Empty;
            oIn60detalle.In60Prioridad = string.Empty;
            oIn60detalle.In60Equipo = string.Empty;
            oIn60detalle.in60mm = _auditoria.Mes;

            new PedidoBLL().RegistrarDetallePedido(oIn60detalle);
            ListarDetallePedido();

            upBandeja.Update();
            mpeArticulo.Hide();
        }
        catch (Exception)
        {

            throw;
        }
    }

    #region Eventos Paginado

    void Inicializar()
    {
        try
        {

            this.imgbtnBack.Visible = false;
            this.imgbtnStart.Visible = false;
            this.imgbtnEnd.Visible = false;
            this.imgbtnNext.Visible = false;

            this.imgbtnBack.Enabled = false;
            this.imgbtnStart.Enabled = false;
            this.imgbtnEnd.Enabled = false;
            this.imgbtnNext.Enabled = false;

        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    void imgbtnEnd_Click(object sender, ImageClickEventArgs e)
    {
        try
        {
            if (this.gvBandeja.PageIndex < (this.gvBandeja.PageCount - 1))
            {
                this.gvBandeja.PageIndex = this.gvBandeja.PageCount - 1;
                ListarDetallePedido();

                this.imgbtnStart.Enabled = true;
                this.imgbtnBack.Enabled = true;
                this.imgbtnEnd.Enabled = false;
                this.imgbtnNext.Enabled = false;
            }

        }
        catch (Exception ex)
        {
            CScript.MessageBox(0, ex.Message);
        }
    }

    void imgbtnBack_Click(object sender, ImageClickEventArgs e)
    {
        try
        {
            if (this.gvBandeja.PageIndex > 0)
            {
                this.gvBandeja.PageIndex = (this.gvBandeja.PageIndex - 1);
                ListarDetallePedido();

                if (this.gvBandeja.PageIndex > 0)
                {
                    this.imgbtnStart.Enabled = true;
                    this.imgbtnBack.Enabled = true;
                }
                else
                {
                    this.imgbtnStart.Enabled = false;
                    this.imgbtnBack.Enabled = false;
                }

                this.imgbtnEnd.Enabled = true;
                this.imgbtnNext.Enabled = true;
            }

        }
        catch (Exception ex)
        {
            CScript.MessageBox(0, ex.Message);
        }
    }

    void imgbtnNext_Click(object sender, ImageClickEventArgs e)
    {
        try
        {
            if (this.gvBandeja.PageIndex < (this.gvBandeja.PageCount - 1))
            {
                this.gvBandeja.PageIndex = this.gvBandeja.PageIndex + 1;

                ListarDetallePedido();

                this.imgbtnStart.Enabled = true;
                this.imgbtnBack.Enabled = true;

                if (this.gvBandeja.PageIndex == (this.gvBandeja.PageCount - 1))
                {
                    this.imgbtnEnd.Enabled = false;
                    this.imgbtnNext.Enabled = false;
                }
                else
                {
                    this.imgbtnEnd.Enabled = true;
                    this.imgbtnNext.Enabled = true;
                }

            }
        }
        catch (Exception ex)
        {
            CScript.MessageBox(0, ex.Message);
        }
    }

    void imgbtnStart_Click(object sender, ImageClickEventArgs e)
    {
        try
        {
            if (this.gvBandeja.PageIndex > 0)
            {
                this.gvBandeja.PageIndex = 0;
                ListarDetallePedido();

                this.imgbtnStart.Enabled = false;
                this.imgbtnBack.Enabled = false;
                this.imgbtnNext.Enabled = true;
                this.imgbtnEnd.Enabled = true;
            }
        }
        catch (Exception ex)
        {
            CScript.MessageBox(0, ex.Message);
        }
    }

    #endregion

    #region paginacion
    /// <summary>
    /// Metodo que permite paginar un GridView
    /// </summary>
    /// <param name="dtData"></param>
    /// <param name="gvLista"></param>
    /// <param name="litRowCount"></param>
    /// <param name="litPage"></param>
    /// <returns></returns>
    /// <Empresa>Minera Laytaruma S.A.</Empresa>
    /// <Creado por>Edgar Huarcaya C.</Creado>
    /// <Fecha Crea>01 mar 2012</Fecha>
    void Paginar(System.Data.DataTable dtData, System.Web.UI.WebControls.GridView gvLista, System.Web.UI.WebControls.Literal litRowCount, System.Web.UI.WebControls.Literal litPage)
    {
        try
        {

            Int16 pageSize = Int16.Parse(System.Web.Configuration.WebConfigurationManager.AppSettings["numeroRegistrosPorPagina"]);
            if (dtData != null)
            {
                if (dtData.Rows.Count >= pageSize)
                {
                    //PaginacionVisible(true);
                    this.imgbtnEnd.Enabled = true;
                    this.imgbtnNext.Enabled = true;
                }
                else
                {
                    //Inicializar();
                    //PaginacionVisible(false);
                    PaginacionEnabled(false);
                    litRowCount.Text = string.Format("Número de Registros encontrados : {0}", 0);
                    litPage.Text = "Página: 0 de 0";
                }

                Int16 intPag;
                try
                {
                    intPag = short.Parse(Math.Ceiling(Convert.ToDouble(dtData.Rows.Count) / pageSize).ToString());
                    if (intPag == 0) intPag = 1;
                }
                catch (Exception e)
                {
                    intPag = 0;
                }

                litRowCount.Text = string.Format("Número de Registros encontrados : {0}", dtData.Rows.Count);
                litPage.Text = "Página: " + Convert.ToString(this.gvBandeja.PageIndex + 1) + " de " + intPag.ToString();
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    /// <summary>
    /// Metodo para paginacion en la grilla
    /// </summary>
    /// <param name="valor"></param>
    void PaginacionVisible(bool valor)
    {
        try
        {
            imgbtnStart.Visible = valor;
            imgbtnNext.Visible = valor;
            imgbtnBack.Visible = valor;
            imgbtnEnd.Visible = valor;
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    /// <summary>
    /// Metodo para paginacion en la grilla
    /// </summary>
    /// <param name="valor"></param>
    void PaginacionEnabled(bool valor)
    {
        try
        {
            imgbtnStart.Enabled = valor;
            imgbtnNext.Enabled = valor;
            imgbtnBack.Enabled = valor;
            imgbtnEnd.Enabled = valor;
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    #endregion

    protected void lnkCambiarEstado_Click(object sender, EventArgs e)
    {
        LinkButton lnkCambiarEstado = (LinkButton)sender;
        CargarEstado();
        this.hidItem.Value = lnkCambiarEstado.CommandArgument;
        this.hidEstadoActual.Value = lnkCambiarEstado.CommandName;
        this.txtNuevaCantidad.Text = "0";
        mpeArticulo.Show();
    }
    protected void btnCancelarAtencion_Click1(object sender, EventArgs e)
    {
        mpeArticulo.Hide();
    }
    protected void btnGuardarAtencion_Click(object sender, EventArgs e)
    {
        try
        {

            //if (this.ddlEstadoAprobacion.SelectedValue.CompareTo(this.hidEstadoActual.Value) != 0)
            //{
                //Guardamos el estado del pedido
                In60detalleSeg oIn60detalleSeg = new In60detalleSeg();
                oIn60detalleSeg.In60codemp = _auditoria.CodigoEmpresa;
                oIn60detalleSeg.In60aa = _auditoria.Periodo;
                oIn60detalleSeg.In60numped = this.hidNroPedido.Value;
                oIn60detalleSeg.In60Item = int.Parse(this.hidItem.Value);
                oIn60detalleSeg.In60CantidadNueva = double.Parse(this.txtNuevaCantidad.Text);
                oIn60detalleSeg.In60Estado = this.ddlEstadoAprobacion.SelectedValue;
                oIn60detalleSeg.In60Area = this.ddlArea.SelectedValue;
                oIn60detalleSeg.In60NameUser = _auditoria.usuario.Nombre;
                oIn60detalleSeg.in60FlujoProceso = int.Parse(this.hidFlujoProceso.Value);  // UIConstante.OrdenEstado.JefeSuperintendente;
                oIn60detalleSeg.In60Observacion = string.Empty;

                new PedidoBLL().RegistrarDetallePedidoSeguimiento(oIn60detalleSeg);

                ListarDetallePedido();
            //}

            upBandeja.Update();
            mpeArticulo.Hide();
        }
        catch (Exception ex)
        {

            throw;
        }
    }
    protected void btnBuscar_Click(object sender, EventArgs e)
    {
        ListarDetallePedido();
    }
    protected void btnActualizarEstado_Click(object sender, EventArgs e)
    {
        try
        {
                        
            for (int i = 0; i < this.gvBandeja.Rows.Count; i++)
            {
                CheckBox chkSel = (CheckBox)this.gvBandeja.Rows[i].FindControl("chkSel");
                if (chkSel.Checked == true)
                {
                    Label lblIn60numped = (Label)this.gvBandeja.Rows[i].FindControl("lblIn60numped");
                    Label lblItem = (Label)this.gvBandeja.Rows[i].FindControl("lblItem");
                    HiddenField hidEstado = (HiddenField)this.gvBandeja.Rows[i].FindControl("hidEstado");

                    this.hidNroPedido.Value = lblIn60numped.Text;
                    this.hidItem.Value = lblItem.Text;
                    this.hidEstadoActual.Value = hidEstado.Value;

                    break;
                }
            }

            CargarEstado();

            this.txtNuevaCantidad.Text = "0";
            mpeArticulo.Show();

        }
        catch (Exception)
        {
            
            throw;
        }
    }
}