//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace MC.ControlPedido.Model
{
    public partial class Perfil
    {
        #region Primitive Properties
    
        public virtual int IdPerfil
        {
            get;
            set;
        }
    
        public virtual string NombrePerfil
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<Menu> Menu
        {
            get
            {
                if (_menu == null)
                {
                    var newCollection = new FixupCollection<Menu>();
                    newCollection.CollectionChanged += FixupMenu;
                    _menu = newCollection;
                }
                return _menu;
            }
            set
            {
                if (!ReferenceEquals(_menu, value))
                {
                    var previousValue = _menu as FixupCollection<Menu>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMenu;
                    }
                    _menu = value;
                    var newValue = value as FixupCollection<Menu>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMenu;
                    }
                }
            }
        }
        private ICollection<Menu> _menu;
    
        public virtual ICollection<Usuario> Usuario
        {
            get
            {
                if (_usuario == null)
                {
                    var newCollection = new FixupCollection<Usuario>();
                    newCollection.CollectionChanged += FixupUsuario;
                    _usuario = newCollection;
                }
                return _usuario;
            }
            set
            {
                if (!ReferenceEquals(_usuario, value))
                {
                    var previousValue = _usuario as FixupCollection<Usuario>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUsuario;
                    }
                    _usuario = value;
                    var newValue = value as FixupCollection<Usuario>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUsuario;
                    }
                }
            }
        }
        private ICollection<Usuario> _usuario;

        #endregion
        #region Association Fixup
    
        private void FixupMenu(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Menu item in e.NewItems)
                {
                    if (!item.Perfil.Contains(this))
                    {
                        item.Perfil.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Menu item in e.OldItems)
                {
                    if (item.Perfil.Contains(this))
                    {
                        item.Perfil.Remove(this);
                    }
                }
            }
        }
    
        private void FixupUsuario(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Usuario item in e.NewItems)
                {
                    if (!item.Perfil.Contains(this))
                    {
                        item.Perfil.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Usuario item in e.OldItems)
                {
                    if (item.Perfil.Contains(this))
                    {
                        item.Perfil.Remove(this);
                    }
                }
            }
        }

        #endregion
    }
}
